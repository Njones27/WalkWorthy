name: CDK Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  STACK_WORKDIR: infrastructure

jobs:
  synth-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies (infrastructure)
        if: ${{ hashFiles(format('{0}/package.json', env.STACK_WORKDIR)) != '' }}
        run: npm install
        working-directory: ${{ env.STACK_WORKDIR }}

      - name: Lint infrastructure package
        if: ${{ hashFiles(format('{0}/package.json', env.STACK_WORKDIR)) != '' }}
        run: npm run lint --if-present
        working-directory: ${{ env.STACK_WORKDIR }}

      - name: Test infrastructure package
        if: ${{ hashFiles(format('{0}/package.json', env.STACK_WORKDIR)) != '' }}
        run: npm test --if-present
        working-directory: ${{ env.STACK_WORKDIR }}

      - name: CDK synth
        if: ${{ hashFiles(format('{0}/cdk.json', env.STACK_WORKDIR)) != '' }}
        run: npx cdk synth
        working-directory: ${{ env.STACK_WORKDIR }}

      - name: CDK deploy
        if: ${{ hashFiles(format('{0}/cdk.json', env.STACK_WORKDIR)) != '' }}
        run: npx cdk deploy --require-approval=never
        working-directory: ${{ env.STACK_WORKDIR }}
